apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        wangdada {
            storeFile file('wangdada.jks')
            storePassword 'wangdada'
            keyAlias = 'wangdada'
            keyPassword 'wangdada'
        }
    }
    compileSdkVersion 28
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "org.mtc.wallet"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
        signingConfig signingConfigs.wangdada
    }


    sourceSets{
        main {
            java {
                srcDir 'src/main/kotlin'
                jniLibs.srcDirs = ['libs']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            buildConfigField("String", "BASE_URL", "\"https://wapi.metcalfe.network\"")
            resValue("string","appNameX","MTCWallet")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.wangdada
        }
        debug{
            applicationIdSuffix ".debug"
            buildConfigField("String", "BASE_URL", "\"http://101.32.183.23:18080\"")
            resValue("string","appNameX","MTCWallet_test")
//            buildConfigField("String", "BASE_URL", "\"https://wapi.metcalfe.network\"")
//            resValue("string","appNameX","MTCWallet")
            signingConfig signingConfigs.wangdada
        }
    }

//    productFlavors{
//        Flavortest{
//            buildConfigField("String","testFlavorKey","\"testFlavorValue\"")
//        }
//    }


    androidExtensions {
        experimental = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'


    // Anko Commons
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    // Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version" // sdk15, sdk19, sdk21, sdk23 are also available
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"

    // Coroutine listeners for Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"

    // Anko SQLite
    implementation "org.jetbrains.anko:anko-sqlite:$anko_version"

    //https://github.com/kotlin/kotlinx.coroutines/blob/master/README.md#using-in-your-projects
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.1'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.4.0'

//    https://github.com/Kotlin/kotlinx.coroutines

    //https://github.com/JakeWharton/retrofit2-kotlin-coroutines-adapter
//    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    //https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.okhttp3:okhttp:4.1.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.1.1'

//    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    implementation 'androidx.room:room-common:2.1.0'
    kapt  "androidx.room:room-compiler:2.1.0"
    implementation "androidx.room:room-ktx:2.1.0"
    implementation project(path: ':zbarlibary')
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'org.greenrobot:eventbus:3.1.1'

    implementation 'com.kaopiz:kprogresshud:1.2.0'

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'


    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'  //1.0.5及以前版本的老用户升级需谨慎，API改动过大
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0'  //没有使用特殊Header，可以不加这行


    implementation 'com.azhon:appupdate:2.3.0'
    implementation 'com.neovisionaries:nv-websocket-client:2.9'
}
